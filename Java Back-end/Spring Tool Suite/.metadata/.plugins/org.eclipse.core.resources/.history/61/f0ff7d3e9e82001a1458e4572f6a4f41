package io.hieu.guitartech.controllers;

import io.hieu.guitartech.dto.BrandDto;
import io.hieu.guitartech.services.IBrandService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
public class BrandController {
    @Autowired
    private IBrandService brandService;

    @GetMapping("/guitartech/v0/brands")
    public ResponseEntity<List<BrandDto>> findAllBrands() {
        List<BrandDto> allBrands = brandService.findAll();
        if (allBrands.isEmpty()) {
            return new ResponseEntity<List<BrandDto>>(allBrands, HttpStatus.NO_CONTENT);
        }
        return new ResponseEntity<List<BrandDto>>(allBrands, HttpStatus.OK);
    }

    @GetMapping("/guitartech/v0/brands/{brandId}")
    public ResponseEntity<BrandDto> findBrandById(@PathVariable("brandId") Long brandId) {
        Optional<BrandDto> brand = brandService.findById(brandId);
        if (brand.isPresent()) {
            return new ResponseEntity<>(brand.get(), HttpStatus.OK);
        }
        return new ResponseEntity<>(HttpStatus.NOT_FOUND);
    }

    @PostMapping(path = "/guitartech/v0/brands")
    public ResponseEntity<BrandDto> createBrand(@RequestBody BrandDto brandDto) {
        brandDto = brandService.create(brandDto);
        return new ResponseEntity<BrandDto>(brandDto, HttpStatus.CREATED);
    }

    @PutMapping(path = "/guitartech/v0/brands/{brandId}")
    public ResponseEntity<BrandDto> updateBrand(@PathVariable("brandId") Long brandId, @RequestBody BrandDto brandDto) {
        brandDto = brandService.update(brandDto, brandId);
        return new ResponseEntity<BrandDto>(brandDto, HttpStatus.OK);
    }

    @DeleteMapping(path = "/guitartech/v0/brands/{brandId}")
    public ResponseEntity<Void> deleteBrand(@PathVariable("brandId") Long brandId) {
        brandService.delete(brandId);
        return new ResponseEntity<Void>(HttpStatus.OK);
    }
}